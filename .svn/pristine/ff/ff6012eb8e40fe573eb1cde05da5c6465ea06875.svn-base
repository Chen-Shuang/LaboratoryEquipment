package scjhgl;

import java.io.UnsupportedEncodingException;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import scjhgl.Xsdd;
import com.jfinal.core.Controller;
import com.jfinal.plugin.activerecord.Db;
import com.jfinal.plugin.activerecord.Page;

public class ZzpscddController extends Controller {
	
	public void index(){
		 render("/scjhgl/zzpscdd.html");
	    }
	
	public void Tbody_list1(){
		 Page<?> dataPage= Db.paginate(getParaToInt("pageNumber", 1), 5, "SELECT *","FROM scjhgl_zzpscdd where ddzt='未排产' && ypcs=0 ORDER BY ddh asc");   //未排产
		 List<Xsdd> xsdd = Xsdd.dao.find("select * from scjhgl_xsdd");
		 List<Kcxx> kcxx = Kcxx.dao.find("select * from scjhgl_kcxx");
		 Map<String, Object> map1= new HashMap<String, Object>();
			map1.put("paginate", dataPage);
			map1.put("xsdd", xsdd);
			map1.put("kcxx", kcxx);
			List<Object> data = new ArrayList<Object>();
			data.add(map1);
			renderJson(data);
	}
	public void Tbody_list2(){
		Page<?> dataPage= Db.paginate(getParaToInt("pageNumber", 1), 5, "SELECT *","FROM scjhgl_zzpscdd where ddzt='已排产' ORDER BY ddh asc");   //已排产
		 List<Xsdd> xsdd = Xsdd.dao.find("select * from scjhgl_xsdd");
		 List<Kcxx> kcxx = Kcxx.dao.find("select * from scjhgl_kcxx");
		 Map<String, Object> map1= new HashMap<String, Object>();
			map1.put("paginate", dataPage);
			map1.put("xsdd", xsdd);
			map1.put("kcxx", kcxx);
			List<Object> data = new ArrayList<Object>();
			data.add(map1);
			renderJson(data);
	}
	public void Tbody_list3(){
		Page<?> dataPage= Db.paginate(getParaToInt("pageNumber", 1), 5, "SELECT *","FROM scjhgl_zzpscdd where ddzt='已闭单' ORDER BY ddh asc");   //已闭单
		List<Xsdd> xsdd = Xsdd.dao.find("select * from scjhgl_xsdd");
		 List<Kcxx> kcxx = Kcxx.dao.find("select * from scjhgl_kcxx");
		 Map<String, Object> map1= new HashMap<String, Object>();
			map1.put("paginate", dataPage);
			map1.put("xsdd", xsdd);
			map1.put("kcxx", kcxx);
			List<Object> data = new ArrayList<Object>();
			data.add(map1);
			renderJson(data);
	}
/*	public void getMenuList() {
		List dataList = Db.find("select * from ac_act");
		Map<String, Object> resp = new HashMap<String, Object>();
		resp.put("code", 0);
		resp.put("content", dataList);
		renderJson(resp);
	}

	public void console() {
		// renderFreeMarker("console.html");
		renderFreeMarker("console.html");
	}
*/
	public void ReturnJson() {
		renderJson(Zzpscdd.dao.findById(getParaToInt("id")));
	}
	
	public void c() { // 增
		getModel(Zzpscdd.class).save();
		redirect("/#zzpscdd/index");
	}

	public void u() { // 改
		getModel(Zzpscdd.class).update();
		redirect("/#zzpscdd/index");
	}

	public void d() { // 删
		Zzpscdd.dao.deleteById(getPara("id"));
		redirect("/#zzpscdd/index");
	}

	public void yrks(){    		//插入更新 已入库数
		Integer id = getParaToInt(0);
		Integer yrks = getParaToInt("yrks");
		Zzpscdd.dao.findById(id).set("yrks",yrks).update();
		redirect("/#zzpscdd/index");
	}
	public void PC1(){      					 //初次排产 待排产->已排产
		Integer id = getParaToInt("id");						//前端js中数组ids循环传参
		
		Zzpscdd.dao.findById(id).set("ddzt","已排产").update();     			 //-----------------------------------更改订单状态
		
		Zzprscjh jh = new Zzprscjh();
		Zzpscdd column1 =Zzpscdd.dao.findByIdLoadColumns (id, "ddh,zjbm,scsl"); 		//从自制品生产订单表中获取某一id行的数据
		jh.set("ddh",column1.getLong("ddh"))    	 //取得数据
		  .set("zjbm",column1.getLong("zjbm"))    //子件编码
		  .set("pcsl",column1.getInt("scsl"));	     //默认为订单数量 _次排产数量
		jh.save();         			 					 //----------------------------------------------向 自制品生产计划表 插入 数据
	
		redirect("/#zzpscdd/index");
	}
	
	public void PC2(){       // 已排产->已排产
		Integer id = getParaToInt("id");						//前端js中数组ids循环传参
		Zzprscjh jh = new Zzprscjh();
		Zzpscdd column1 =Zzpscdd.dao.findByIdLoadColumns (id, "ddh,zjbm,scsl"); 		//从自制品生产订单表中获取某一id行的数据
		jh.set("ddh",column1.getLong("ddh"))    	 //取得数据
		  .set("zjbm",column1.getLong("zjbm"))    //子件编码
		  .set("pcsl",column1.getInt("scsl"));	     //默认为订单数量 _次排产数量
		jh.save();         			 					 //----------------------------------------------向 自制品生产计划表 插入 数据
		redirect("/#zzpscdd/index");
		
	}
	
	public void BD(){
		Integer id = getParaToInt(0);
		Zzpscdd.dao.findById(id).set("ddzt","已闭单").set("bdrq",new Date()).update();
		redirect("/#zzpscdd/index");
	}
	
	
	public void search1() throws UnsupportedEncodingException{     		// search for 未排产
		String require =getPara("require","");  	//得到result的值  默认值问"" 
		Page<?> dataPage=Db.paginate(getParaToInt("pageNumer",1), 5, "select *", "from scjhgl_zzpscdd where ddzt='未排产' && ddh like '%"+require+"%' ORDER BY ddh asc");
		if(dataPage.getList().isEmpty()){               //第一次搜索为空
				dataPage=Db.paginate(getParaToInt("pageNumer",1), 5, "select *", "from scjhgl_zzpscdd where ddzt='未排产' && zjbm like '%"+require+"%' ORDER BY ddh asc");
					if(dataPage.getList().isEmpty()){          //第二次搜索为空
						dataPage=Db.paginate(getParaToInt("pageNumer",1), 5, "select *", "from scjhgl_zzpscdd where ddzt='未排产' && zjmc like '%"+require+"%' ORDER BY ddh asc");
						if(dataPage.getList().isEmpty()){         //如果第三个条件也为空
							dataPage=Db.paginate(getParaToInt("pageNumer",1), 5, "select *", "from scjhgl_zzpscdd ddzt='未排产' ORDER BY ddh asc");
						}  
					}
				}              
		renderJson(dataPage);
	}
	public void search2() throws UnsupportedEncodingException{     		// search for 已排产
		String require =getPara("require","");  	//得到result的值  默认值问"" 
		Page<?> dataPage=Db.paginate(getParaToInt("pageNumer",1), 5, "select *", "from scjhgl_zzpscdd where ddzt='已排产' && ddh like '%"+require+"%' ORDER BY ddh asc");
		if(dataPage.getList().isEmpty()){               //第一次搜索为空
				dataPage=Db.paginate(getParaToInt("pageNumer",1), 5, "select *", "from scjhgl_zzpscdd where ddzt='已排产' && khjc like '%"+require+"%' ORDER BY ddh asc");
					if(dataPage.getList().isEmpty()){          //第二次搜索为空
						dataPage=Db.paginate(getParaToInt("pageNumer",1), 5, "select *", "from scjhgl_zzpscdd where ddzt='已排产' && chbm like '%"+require+"%' ORDER BY ddh asc");
						if(dataPage.getList().isEmpty()){         //如果第三个条件也为空
							dataPage=Db.paginate(getParaToInt("pageNumer",1), 5, "select *", "from scjhgl_zzpscdd ddzt='已排产' ORDER BY ddh asc");
						}  
					}
				}              
		renderJson(dataPage);
	}
	public void search3() throws UnsupportedEncodingException{     		// search for 已闭单
		String require =getPara("require","");  	//得到result的值  默认值问"" 
		Page<?> dataPage=Db.paginate(getParaToInt("pageNumer",1), 5, "select *", "from scjhgl_zzpscdd where ddzt='已闭单' && ddh like '%"+require+"%' ORDER BY ddh asc");
		if(dataPage.getList().isEmpty()){               //第一次搜索为空
				dataPage=Db.paginate(getParaToInt("pageNumer",1), 5, "select *", "from scjhgl_zzpscdd where ddzt='已闭单' && khjc like '%"+require+"%' ORDER BY ddh asc");
					if(dataPage.getList().isEmpty()){          //第二次搜索为空
						dataPage=Db.paginate(getParaToInt("pageNumer",1), 5, "select *", "from scjhgl_zzpscdd where ddzt='已闭单' && chbm like '%"+require+"%' ORDER BY ddh asc");
						if(dataPage.getList().isEmpty()){         //如果第三个条件也为空
							dataPage=Db.paginate(getParaToInt("pageNumer",1), 5, "select *", "from scjhgl_zzpscdd ddzt='已闭单' ORDER BY ddh asc");
						}  
					}
				}              
		renderJson(dataPage);
	}
	
	
 }
	
	
	
	
	
	
	
	


