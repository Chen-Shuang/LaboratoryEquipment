package sbgl;

import java.util.Iterator;
import java.util.List;
import java.util.regex.Pattern;

import com.jfinal.core.Controller;

public class MoldMaintenanceController extends Controller{
	public void index(){
		List<MoldMaintenance> list = MoldMaintenance.dao.find("select * from moldMaintenance");
		setAttr("moldMaintenancelist",list);
		render("/sbgl/moldMaintenance.html");
	}
	public void add(){
		render("/sbgl/addView.html");
	}
	public void updater() {
		setAttr("moldMaintenance", MoldMaintenance.dao.findById(getParaToInt()));
		render("/sbgl/updater.html");
	}
	public void update(){
		MoldMaintenance moldMaintenance = getModel(MoldMaintenance.class);
		moldMaintenance.update();
		redirect("/moldMaintenances");
	}
	public void selectById(){
		String _id =(String)getPara("option");
		
		if(_id!=null && !_id.equals("")){
			if(isNumeric(_id) && (_id.length()==11)){
				List<MoldMaintenance> list = MoldMaintenance.dao.find("select * from moldMaintenance where moldNo= "+_id);
				 for (Iterator i = list.iterator(); i.hasNext();) {
			            System.out.println(i.next());
			        }
				setAttr("moldMaintenanceslist",list);
				render("/sbgl/select.html");
			}else if(isNumeric(_id)){
				List<MoldMaintenance> list = MoldMaintenance.dao.find("select * from moldMaintenance where (flowNo ="+_id+" or recorder ="+_id+")");
				 for (Iterator i = list.iterator(); i.hasNext();) {
			            System.out.println(i.next());
			        }
				setAttr("moldMaintenanceslist",list);
				render("/sbgl/select.html");
			}else if(isDateTime(_id)){
				List<MoldMaintenance> list = MoldMaintenance.dao.find("select * from moldMaintenance where recordTime ="+_id);
				 for (Iterator i = list.iterator(); i.hasNext();) {
			            System.out.println(i.next());
			        }
				setAttr("moldMaintenanceslist",list);
				render("/sbgl/select.html");
			}else{
				List<MoldInfo> li = MoldInfo.dao.find("select moldNo from moldInfo where moldName like '%"+_id+"%'");
				 for (Iterator i = li.iterator(); i.hasNext();) {
			            System.out.println(i.next());
			           // list.get(0);
			           // System.out.println(li.get(0));
			        }
				 MoldInfo moldInfo =(MoldInfo)li.get(0);
				 System.out.println(moldInfo);
				String in = (String) moldInfo.getMoldNo();
				System.out.println(in);
				 List<MoldMaintenance> list = MoldMaintenance.dao.find("select * from moldMaintenance where moldNo="+in);
				 setAttr("moldMaintenanceslist",list);
					render("/sbgl/select.html");
			}
			
			
			
			
			}
		else{
			System.out.println("fdghjkl");
			render("/sbgl/selectView.html");
		}
	}
	public void save(){
		MoldMaintenance moldMaintenance = getModel(MoldMaintenance.class);
		moldMaintenance.save();
		redirect("/moldMaintenances");
	}
	public static boolean isNumeric(String str){ 
	     Pattern pattern = Pattern.compile("[0-9]*"); 
	     return pattern.matcher(str).matches();    
	} 
	public static boolean isDateTime(String str){
		Pattern pattern = Pattern.compile("^((\\d{2}(([02468][048])|([13579][26]))[\\-\\/\\s]?((((0?[13578])|(1[02]))[\\-\\/\\s]?((0?[1-9])|([1-2][0-9])|(3[01])))|(((0?[469])|(11))[\\-\\/\\s]?((0?[1-9])|([1-2][0-9])|(30)))|(0?2[\\-\\/\\s]?((0?[1-9])|([1-2][0-9])))))|(\\d{2}(([02468][1235679])|([13579][01345789]))[\\-\\/\\s]?((((0?[13578])|(1[02]))[\\-\\/\\s]?((0?[1-9])|([1-2][0-9])|(3[01])))|(((0?[469])|(11))[\\-\\/\\s]?((0?[1-9])|([1-2][0-9])|(30)))|(0?2[\\-\\/\\s]?((0?[1-9])|(1[0-9])|(2[0-8]))))))(\\s(((0?[0-9])|([1-2][0-3]))\\:([0-5]?[0-9])((\\s)|(\\:([0-5]?[0-9])))))?$");
		 return pattern.matcher(str).matches(); 
	}
}
